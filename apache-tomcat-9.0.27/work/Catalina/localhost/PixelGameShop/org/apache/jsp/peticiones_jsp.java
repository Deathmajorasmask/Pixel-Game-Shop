/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2022-01-04 13:01:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Utils.RequestUtils;
import models.carrito;
import java.util.List;
import models.usuer;

public final class peticiones_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Utils.RequestUtils");
    _jspx_imports_classes.add("models.carrito");
    _jspx_imports_classes.add("models.usuer");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

 
//List<usuer> users = (List<usuer>)request.getAttribute("ShowUsers");
   List<carrito> carrs = (List<carrito>)request.getAttribute(RequestUtils.KEY_ALL_CARR);

      out.write("    \n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<style>\n");
      out.write(".custom-select {\n");
      out.write("  position: relative;\n");
      out.write("  font-family: Arial;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".custom-select select {\n");
      out.write("  display: none; /*hide original SELECT element: */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".select-selected {\n");
      out.write("  background-color: DodgerBlue;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Style the arrow inside the select element: */\n");
      out.write(".select-selected:after {\n");
      out.write("  position: absolute;\n");
      out.write("  content: \"\";\n");
      out.write("  top: 0px;\n");
      out.write("  right: 10px;\n");
      out.write("  width: 0;\n");
      out.write("  height: 0;\n");
      out.write("  border: 6px solid transparent;\n");
      out.write("  border-color: #fff transparent transparent transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Point the arrow upwards when the select box is open (active): */\n");
      out.write(".select-selected.select-arrow-active:after {\n");
      out.write("  border-color: transparent transparent #fff transparent;\n");
      out.write("  top: 7px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* style the items (options), including the selected item: */\n");
      out.write(".select-items div,.select-selected {\n");
      out.write("  color: #ffffff;\n");
      out.write("  padding: 8px 16px;\n");
      out.write("  border: 1px solid transparent;\n");
      out.write("  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;\n");
      out.write("  cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Style items (options): */\n");
      out.write(".select-items {\n");
      out.write("  position: absolute;\n");
      out.write("  background-color: DodgerBlue;\n");
      out.write("  top: 100%;\n");
      out.write("  left: 0;\n");
      out.write("  right: 0;\n");
      out.write("  z-index: 99;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Hide the items when the select box is closed: */\n");
      out.write(".select-hide {\n");
      out.write("  display: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".select-items div:hover, .same-as-selected {\n");
      out.write("  background-color: rgba(0, 0, 0, 0.1);\n");
      out.write("}\n");
      out.write("\n");
      out.write("#cate{\n");
      out.write("padding-left: 40px;\n");
      out.write("padding-top: 25px; \n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row{\n");
      out.write("padding-top: 6px;\n");
      out.write("padding-bottom: 6px;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write(" <!-- Bootstrap CSS -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n");
      out.write("</head>     \n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navbar.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Uname", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("fer", request.getCharacterEncoding()), out, false);
      out.write("  \n");
      out.write("                \n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(" \n");
      out.write("  <!-- Optional JavaScript -->\n");
      out.write("    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!--\n");
      out.write("<div class=\"custom-select\" style=\"width:200px; padding: border-left-width:15px top: 15px\">\n");
      out.write("  <select>\n");
      out.write("    <option value=\"0\">elige categoria:</option>\n");
      out.write("    <option value=\"1\">fruta</option>\n");
      out.write("    <option value=\"2\">verdura</option>\n");
      out.write("    <option value=\"3\">leguminosas</option>\n");
      out.write("    <option value=\"4\">semillas</option>\n");
      out.write("\n");
      out.write("  </select>\n");
      out.write("</div>\n");
      out.write("-->\n");
      out.write("\n");
      out.write("<div>\n");
      out.write("      \n");

     int ida=0;
     int idC=0;
              //  for(usuer user : users){
              for(carrito carr : carrs){
         int idp= carr.getIdCar();
         int idS=carr.getIdArt();
        if(ida!=idp&&idC!=idS)
        {
   
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("<form name=\"venta\" method=\"POST\" action=\"Venta?car=");
      out.print(carr.getIdCar());
      out.write("\" >\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-auto\">\n");
      out.write("            <div>\n");
      out.write("                <img src=\"");
      out.print(carr.getPimg());
      out.write("\" alt=\"...\" class=\"img-thumbnail\" style=\"margin-left: 50px\" height=\"350\" width=\"350\">\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"col\">\n");
      out.write("<p>   ");
      out.print(carr.getNombre());
      out.write("</p>\n");
      out.write("<br>\n");
      out.write("<p>  descripcion   ");
      out.print(carr.getDescri());
      out.write("</p>\n");
      out.write("<br>\n");
      out.write("<p>  estado   ");
      out.print(carr.getEst());
      out.write("</p>\n");
      out.write("<div>\n");
      out.write("<br>\n");
      out.write("<p> tipo de pago ");
      out.print(carr.getTP());
      out.write("  </p>\n");
      out.write(" </div>\n");
      out.write("        </div>\n");
      out.write("<br>\n");
      out.write("<div style=\"border-top-width: 15px; padding-top:20px; \">\n");
      out.write("        <div class=\"col col-lg-2\" align=\"center\">\n");
      out.write("         <p>  categoria  ");
      out.print(carr.getCatego());
      out.write("</p>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col col-lg-2\" align=\"center\">\n");
      out.write("           <p>nombre ");
      out.print( carr.getNombre());
      out.write("</p>           \n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("\n");
      out.write("<div>\n");
      out.write("<from>\n");
      out.write("<input type=\"number\" name=\"precio\" placeholder=\"$$$\" style=\"padding-right: 5px; width: 109px;  margin-right:10px; margin-left:10px; \">\n");
      out.write("</from>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("        </div>           \n");
      out.write("\n");
      out.write(" <div class=\"btn-group-vertical\" style=\"margin-right: 50px\">\n");
      out.write("                \n");
      out.write("                <input class=\"btn btn-success\" type=\"submit\" name=\"Subir\" id=\"boton\">\n");
      out.write("  \n");
      out.write("            </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("              <br>\n");
      out.write("        ");
}
 ida= idp;
 idC= idS;    
}
      out.write("\n");
      out.write("\n");
      out.write("  \n");
      out.write("</div>\n");
      out.write("\n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var x, i, j, selElmnt, a, b, c;\n");
      out.write("/*look for any elements with the class \"custom-select\":*/\n");
      out.write("x = document.getElementsByClassName(\"custom-select\");\n");
      out.write("for (i = 0; i < x.length; i++) {\n");
      out.write("  selElmnt = x[i].getElementsByTagName(\"select\")[0];\n");
      out.write("  /*for each element, create a new DIV that will act as the selected item:*/\n");
      out.write("  a = document.createElement(\"DIV\");\n");
      out.write("  a.setAttribute(\"class\", \"select-selected\");\n");
      out.write("  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\n");
      out.write("  x[i].appendChild(a);\n");
      out.write("  /*for each element, create a new DIV that will contain the option list:*/\n");
      out.write("  b = document.createElement(\"DIV\");\n");
      out.write("  b.setAttribute(\"class\", \"select-items select-hide\");\n");
      out.write("  for (j = 1; j < selElmnt.length; j++) {\n");
      out.write("    /*for each option in the original select element,\n");
      out.write("    create a new DIV that will act as an option item:*/\n");
      out.write("    c = document.createElement(\"DIV\");\n");
      out.write("    c.innerHTML = selElmnt.options[j].innerHTML;\n");
      out.write("    c.addEventListener(\"click\", function(e) {\n");
      out.write("        /*when an item is clicked, update the original select box,\n");
      out.write("        and the selected item:*/\n");
      out.write("        var y, i, k, s, h;\n");
      out.write("        s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\n");
      out.write("        h = this.parentNode.previousSibling;\n");
      out.write("        for (i = 0; i < s.length; i++) {\n");
      out.write("          if (s.options[i].innerHTML == this.innerHTML) {\n");
      out.write("            s.selectedIndex = i;\n");
      out.write("            h.innerHTML = this.innerHTML;\n");
      out.write("            y = this.parentNode.getElementsByClassName(\"same-as-selected\");\n");
      out.write("            for (k = 0; k < y.length; k++) {\n");
      out.write("              y[k].removeAttribute(\"class\");\n");
      out.write("            }\n");
      out.write("            this.setAttribute(\"class\", \"same-as-selected\");\n");
      out.write("            break;\n");
      out.write("          }\n");
      out.write("        }\n");
      out.write("        h.click();\n");
      out.write("    });\n");
      out.write("    b.appendChild(c);\n");
      out.write("  }\n");
      out.write("  x[i].appendChild(b);\n");
      out.write("  a.addEventListener(\"click\", function(e) {\n");
      out.write("      /*when the select box is clicked, close any other select boxes,\n");
      out.write("      and open/close the current select box:*/\n");
      out.write("      e.stopPropagation();\n");
      out.write("      closeAllSelect(this);\n");
      out.write("      this.nextSibling.classList.toggle(\"select-hide\");\n");
      out.write("      this.classList.toggle(\"select-arrow-active\");\n");
      out.write("    });\n");
      out.write("}\n");
      out.write("function closeAllSelect(elmnt) {\n");
      out.write("  /*a function that will close all select boxes in the document,\n");
      out.write("  except the current select box:*/\n");
      out.write("  var x, y, i, arrNo = [];\n");
      out.write("  x = document.getElementsByClassName(\"select-items\");\n");
      out.write("  y = document.getElementsByClassName(\"select-selected\");\n");
      out.write("  for (i = 0; i < y.length; i++) {\n");
      out.write("    if (elmnt == y[i]) {\n");
      out.write("      arrNo.push(i)\n");
      out.write("    } else {\n");
      out.write("      y[i].classList.remove(\"select-arrow-active\");\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("  for (i = 0; i < x.length; i++) {\n");
      out.write("    if (arrNo.indexOf(i)) {\n");
      out.write("      x[i].classList.add(\"select-hide\");\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("/*if the user clicks anywhere outside the select box,\n");
      out.write("then close all select boxes:*/\n");
      out.write("document.addEventListener(\"click\", closeAllSelect);\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
